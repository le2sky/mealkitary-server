name: Mealkitary main CD

on:
    push:
        branches:
            - 'main'

jobs:
    cd:
        runs-on: ubuntu-latest
        steps:
            -   id: check_pr_labels
                name: PR 라벨 확인
                shell: bash
                run: |
                    pull_request_labels=$(curl \
                      --fail \
                      -H "Accept: application/vnd.github.groot-preview+json" \
                      -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
                      "${{ github.api_url }}/repos/${{ github.repository }}/commits/${{ github.sha }}/pulls" \
                    | jq -r ".[0].labels[].name")

                    if echo "$pull_request_labels" | grep -q '^no-deployment$' ; then
                      echo "::set-output name=DEPLOYMENT::false"
                    fi
            -   uses: actions/checkout@v3
            -   name: Firebase 시크릿 생성
                run: |
                    echo ${{ secrets.ENCODED_FIREBASE_JSON }} | base64 -d
                    > ./mealkitary-infrastructure/adapter-firebase-notification/src/main/resources/firebase.json
            -   name: JDK 11 구성
                uses: actions/setup-java@v3
                with:
                    java-version: '11'
                    distribution: 'temurin'
                    cache: 'gradle'

            -   name: Gradlew wrapper 실행 권한 부여
                run: chmod +x gradlew

            -   name: Gradle 캐싱
                uses: actions/cache@v3
                with:
                    path: |
                        ~/.gradle/caches
                        ~/.gradle/wrapper
                    key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
                    restore-keys: |
                        ${{ runner.os }}-gradle-

            -   name: Gradle 빌드
                if: ${{ steps.check_pr_labels.outputs.DEPLOYMENT != 'false' }}
                run: ./gradlew clean build

            -   name: Docker 로그인
                if: ${{ steps.check_pr_labels.outputs.DEPLOYMENT != 'false' }}
                uses: docker/login-action@v2
                with:
                    username: ${{ secrets.DOCKERHUB_USERNAME }}
                    password: ${{ secrets.DOCKERHUB_TOKEN }}

            -   name: 도커 이미지 빌드, 레지스트리 전송
                if: ${{ steps.check_pr_labels.outputs.DEPLOYMENT != 'false' }}
                run: ./gradlew jib
